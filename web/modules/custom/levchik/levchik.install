<?php

/**
 * @file
 * Install, update and uninstall functions for the levchik module.
 */

/**
 * Implements hook_install().
 */
function levchik_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function levchik_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_schema().
 */
function levchik_schema() {
  $schema['levchik'] = [
    'description' => "Table to store user's cats data.",
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key.',
      ],
      'created' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp when the record was created.',
      ],
      'name' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => "Cats name.",
      ],
      'email' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        // 'size' => 255,
        'default' => '',
        'description' => "Cats owner email.",
      ],
      'picture_fid' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        'default' => '',
        'description' => "Cats picture.",
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'created' => ['created'],
      'name' => ['name'],
      'email' => ['email'],
    ],
    'foreign keys' => [
      'picture_fid' => [
        'table' => 'file_managed',
        'columns' => ['picture_fid' => 'fid'],
      ],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function levchik_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['levchik_status'] = [
      'title' => t('levchik status'),
      'value' => t('levchik value: @value', ['@value' => $value]),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}
